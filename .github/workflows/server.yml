name: Test Shithead Server

on:
  push:
    branches: [ "main" ]
    # paths: ["server/**"]
  pull_request:
    branches: [ "main" ]
    # paths: ["server/**"]
    
jobs:
  tests:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.11"] 
    defaults:
      run:
        working-directory: ./server
        shell: bash
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: cache poetry install
      uses: actions/cache@v2
      with:
        path: ~/.local
        key: poetry-1.2.2-0-${{ matrix.python-version }}-${{ matrix.os }}
    
    - uses: snok/install-poetry@v1
      with:
        version: 1.2.2
        virtualenvs-create: true
        
    - name: cache deps
      id: cache-deps
      uses: actions/cache@v2
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}-${{ matrix.os }}
   
    - run: poetry install --no-interaction --no-root
      if: steps.cache-deps.outputs.cache-hit != 'true'  
   
    - run: poetry install --no-interaction
    - run: poetry run pytest --junitxml=junit/test-results-${{ matrix.python-version }}-${{ matrix.os }}.xml --cov
    
    - name: Upload pytest test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results-${{ matrix.python-version }}-${{ matrix.os }}
        path: server/junit/test-results-${{ matrix.python-version }}-${{ matrix.os }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

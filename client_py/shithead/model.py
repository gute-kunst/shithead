# generated by datamodel-codegen:
#   filename:  request-schema.json
#   timestamp: 2023-02-18T15:35:29+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field


class Requests(BaseModel):
    __root__: Any = Field(..., title='Requests')


class TakePlayPileRequest(BaseModel):
    player_id: int = Field(..., title='Player Id')
    type: Optional[str] = Field('take_play_pile', title='Type')


class HiddenCardRequest(BaseModel):
    player_id: int = Field(..., title='Player Id')
    type: Optional[str] = Field('hidden_card', title='Type')


class Card(BaseModel):
    rank: int = Field(..., title='Rank')
    suit: int = Field(..., title='Suit')


class ChoosePublicCardsRequest(BaseModel):
    player_id: int = Field(..., title='Player Id')
    type: Optional[str] = Field('choose_public_cards', title='Type')
    cards: List[Card] = Field(..., title='Cards')


class PrivateCardsRequest(BaseModel):
    player_id: int = Field(..., title='Player Id')
    type: Optional[str] = Field('private_cards', title='Type')
    cards: List[Card] = Field(..., title='Cards')
    choice: str = Field(..., title='Choice')
